trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- checkout: self
  persistCredentials: true

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.1.x'
    
- script: |
    git fetch origin
    if git branch --list | grep -q "master"; then 
      git checkout master
    else
      git checkout -b master origin/master
    fi
    git pull origin master
    git checkout -
  displayName: 'Update master branch'

- script: |
    if git diff $(git merge-base master HEAD)..HEAD --name-only | grep -q "$(solution)"; then 
      echo "Updates to the project found"
      echo '##vso[task.setvariable variable=rebuild;isOutput=true]true'
    else
      echo "No Updates to the project were found"
      echo '##vso[task.setvariable variable=rebuild;isOutput=true]false'
    fi
  displayName: 'Detect changes in the project'
  
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
  condition: eq(variables.rebuild, 'true')

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
  condition: eq(variables.rebuild, 'true')

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: True
    arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True
  condition: eq(variables.rebuild, 'true')

- task: PublishBuildArtifacts@1
  condition: eq(variables.rebuild, 'true')
