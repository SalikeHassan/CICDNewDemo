stages:
- stage: Build
  jobs:
  - job: UpdateBranches
    displayName: 'Update dev1 and master branches'
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '3.1.x'

  - job: DetectChanges
    displayName: 'Detect changes in the solution files between dev1 and master branches'
    dependsOn: UpdateBranches
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      persistCredentials: true
      name: setImageVars
    - script: |
        git fetch origin
        if git diff origin/master... --name-only | grep -q  "$(solution)"; then   
          echo "Updates to the project found"
          echo '##vso[task.setvariable variable=rebuild;isOutput=true]true'
          echo "Rebuild value: $rebuild"
        else
          echo "No Updates to the project were found"
          echo '##vso[task.setvariable variable=rebuild;isOutput=true]false'
        fi
      displayName: 'Detect changes'

  - job: BuildAndPublish
    displayName: 'Build and Publish'
    dependsOn: DetectChanges
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Restore'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
      condition: eq(dependencies.DetectChanges.outputs['setImageVars.rebuild'], 'true')

    - task: DotNetCoreCLI@2
      displayName: 'Build'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
      condition: eq(dependencies.DetectChanges.outputs['setImageVars.rebuild'], 'true')

    - task: DotNetCoreCLI@2
      displayName: 'Publish'
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)'
        zipAfterPublish: true
      condition: eq(dependencies.DetectChanges.outputs['setImageVars.rebuild'], 'true')

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build Artifacts'
      condition: eq(dependencies.DetectChanges.outputs['setImageVars.rebuild'], 'true')
